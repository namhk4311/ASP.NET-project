@model WebApplication1.Models.User

@{
    ViewData["Title"] = "Login";
}


<div class="blurbackground">
</div>

<div class="popup-container">
    <div class="popup-box">
        <h1 class="notifcation-message">Error</h1>
        <p class="notifcation-message">Incorrect Username/Password</p>
        <button class="close-btn">Try again</button>
    </div>
</div>

<h2>Login</h2>
<hr class="line-separate" />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="username" class="control-label"></label>
                <input asp-for="username" class="form-control" />
                <span asp-validation-for="username" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="password" class="control-label"></label>
                <input asp-for="password" type="password" class="form-control" />
                <span asp-validation-for="password" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" style="margin-top: 20px" value="Login" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>



@section Scripts {
    @{
        if (TempData["msg"] != null)
        {
                <script>
                

                    popupnow();

                    closeBtn.onclick = () => {
                        popupContainer.classList.remove('active');
                        hideLine.classList.remove('active');
                        blurBackground.classList.remove('active');
                    }
                </script>
        }
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
